{"version":3,"sources":["pages/NotFound.js","components/Graphs.js","components/Loading.js","components/Card.js","components/Repos.js","components/UserInfo.js","pages/Profile.js","pages/Search.js","App.js","reportWebVitals.js","index.js"],"names":["NotFound","Graph","props","Chart","defaults","global","defaultFontColor","mostStarredCount","repos","sort","a","b","stargazers_count","map","e","slice","mostStarredNames","name","languagesObj","arr","counts","i","length","countUnique","language","languagesLst","Object","keys","values","data_stars","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","data_langs","className","width","height","options","maintainAspectRatio","legend","fontColor","Loading","err","Card","description","stars","forks","url","onClick","window","open","Repos","useState","sortBy","setsortBy","value","onChange","target","r","html_url","UserInfo","avatar_url","location","following","followers","login","company","created_at","public_repos","alt","src","rel","href","moment","format","end","duration","Profile","history","useHistory","username","useParams","setErr","setData","loading","setLoading","fetchStep","setFetchStep","setRepos","canFetchRepos","setCanFetchRepos","remainingRate","useRef","useEffect","fetch","then","res","ok","Error","json","current","rate","remaining","status","push","console","log","catch","message","Math","ceil","prevState","error","fetchRepos","Search","setUsername","onSubmit","preventDefault","now","reset_date","unix","reset","reset_in","diff","handleSubmit","type","autoFocus","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74c00ed1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst NotFound = () => {\n  return <div>404 NOT FOUND</div>;\n};\n\nexport default NotFound;\n","import Chart from \"chart.js\";\nimport React from \"react\";\nimport { Bar, Pie } from \"react-chartjs-2\";\nimport \"../styles/components/graphs.css\";\n\nconst Graph = (props) => {\n  Chart.defaults.global.defaultFontColor = \"white\";\n  const mostStarredCount = props.repos\n    .sort((a, b) => b.stargazers_count - a.stargazers_count)\n    .map((e) => e.stargazers_count)\n    .slice(0, 5);\n  const mostStarredNames = props.repos\n    .sort((a, b) => b.stargazers_count - a.stargazers_count)\n    .map((e) => e.name)\n    .slice(0, 5);\n\n  const countUnique = (arr) => {\n    const counts = {};\n    for (var i = 0; i < arr.length; i++) {\n      counts[arr[i]] = 1 + (counts[arr[i]] || 0);\n    }\n    return counts;\n  };\n\n  const languagesObj = countUnique(props.repos.map((e) => e.language));\n  const languagesLst = Object.keys(languagesObj)\n    .map((e, i) => [e, Object.values(languagesObj)[i]])\n    .sort((a, b) => b[1] - a[1])\n    .slice(0, 6);\n\n  const data_stars = {\n    labels: mostStarredNames,\n    datasets: [\n      {\n        label: \"# of Stars\",\n        data: mostStarredCount,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const data_langs = {\n    labels: languagesLst.map((e) => e[0]),\n    datasets: [\n      {\n        label: \"# of Votes\",\n        data: languagesLst.map((e) => e[1]),\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  return (\n    <div className=\"graphs\">\n      <div className=\"graph-wrapper\">\n        <Bar\n          data={data_stars}\n          width={150}\n          height={300}\n          options={{\n            maintainAspectRatio: false,\n            legend: { labels: { fontColor: \"white\" } },\n          }}\n        />\n      </div>\n\n      <div className=\"graph-wrapper\">\n        <Pie\n          data={data_langs}\n          width={300}\n          height={300}\n          options={{\n            maintainAspectRatio: false,\n            legend: { labels: { fontColor: \"white\" } },\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Graph;\n","import React from \"react\";\nimport \"../styles/components/loading.css\";\n\nconst Loading = (props) => {\n  return (\n    <div className=\"loader\">\n      <div className=\"lds-ellipsis\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      {props.err && <div className=\"error\">{props.err}</div>}\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { RiGitRepositoryLine, RiStarLine } from \"react-icons/ri\";\nimport { AiOutlineFork } from \"react-icons/ai\";\nimport \"../styles/components/card.css\";\n\nconst Card = ({ name, description, stars, forks, url }) => {\n  return (\n    <div className=\"card\" onClick={() => window.open(url, \"_blank\")}>\n      <h3>\n        <RiGitRepositoryLine className=\"repoicon\" />\n        {name}\n      </h3>\n      <p>{description}</p>\n      <p>\n        <span>\n          <RiStarLine />\n          {stars}\n        </span>{\" \"}\n        <span>\n          <AiOutlineFork />\n          {forks}\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default Card;\n","import { React, useState } from \"react\";\nimport \"../styles/components/repos.css\";\nimport Card from \"./Card\";\n\nconst Repos = ({ repos }) => {\n  const [sortBy, setsortBy] = useState(\"stars\");\n\n  return (\n    <div className=\"repos\">\n      <div className=\"sort\">\n        <h2>\n          Top Repositories <span>By</span>\n        </h2>\n        <select\n          value={sortBy}\n          onChange={(e) => {\n            setsortBy(e.target.value);\n          }}\n        >\n          <option>stars</option>\n          <option>forks</option>\n        </select>\n      </div>\n      <div className=\"cards\">\n        {repos\n          .sort((a, b) =>\n            sortBy === \"stars\"\n              ? b.stargazers_count - a.stargazers_count\n              : b.forks - a.forks\n          )\n          .slice(0, 9)\n          .map((r, i) => {\n            return (\n              <Card\n                key={i}\n                name={r.name}\n                description={\n                  r.description\n                    ? r.description.length <= 75\n                      ? r.description\n                      : r.description.slice(75) + \"...\"\n                    : \"\"\n                }\n                stars={r.stargazers_count}\n                forks={r.forks}\n                url={r.html_url}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Repos;\n","import { VscCalendar, VscLocation } from \"react-icons/vsc\";\nimport { MdWork } from \"react-icons/md\";\nimport \"../styles/components/userinfo.css\";\nimport moment from \"moment\";\nimport CountUp from \"react-countup\";\n\nconst UserInfo = (props) => {\n  const {\n    avatar_url,\n    name,\n    location,\n    following,\n    followers,\n    login,\n    company,\n    created_at,\n    public_repos,\n  } = props.data;\n  return (\n    <div className=\"userInfo\">\n      <img alt=\"User profile\" src={avatar_url}></img>\n      <h1>{name}</h1>\n      <h2>\n        <a\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          href={`https://github.com/${login}`}\n        >\n          @{login}\n        </a>\n      </h2>\n      <div className=\"generalInfo\">\n        {location && (\n          <span>\n            <VscLocation />\n            {location}\n          </span>\n        )}\n\n        {company && (\n          <span>\n            <MdWork />\n            {company}\n          </span>\n        )}\n\n        <span>\n          <VscCalendar />\n          Joined {moment(created_at).format(\"MMM d, YYYY\")}\n        </span>\n      </div>\n      <div className=\"followersInfo\">\n        <div>\n          <p className=\"counter\">\n            <CountUp end={followers} duration={3} />\n          </p>\n          <p>FOLLOWERS</p>\n        </div>\n        <div>\n          <p className=\"counter\">\n            <CountUp end={following} duration={3} />\n          </p>\n          <p>FOLLOWING</p>\n        </div>\n        <div>\n          <p className=\"counter\">\n            <CountUp end={public_repos} duration={3} />{\" \"}\n          </p>\n          <p>REPOSITORIES</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserInfo;\n","import React, { Fragment, useEffect, useRef, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport Graph from \"../components/Graphs\";\nimport Loading from \"../components/Loading\";\nimport Repos from \"../components/Repos\";\nimport UserInfo from \"../components/UserInfo\";\n\nconst Profile = () => {\n  const history = useHistory();\n  const { username } = useParams(\"username\");\n  const [err, setErr] = useState(\"\"); // Errors Messages\n  const [data, setData] = useState(null); // User Data\n  const [loading, setLoading] = useState(true); // Tracks loading data for animation\n  const [fetchStep, setFetchStep] = useState(0); // Used to force wating for fetch rate\n  const [repos, setRepos] = useState([]); // array of user's repos\n  const [canFetchRepos, setCanFetchRepos] = useState(false); // If API rate is enough to fetch repos\n  const remainingRate = useRef(0); // Remaining rate\n\n  useEffect(() => {\n    // We want to chhck the remaining rate to decide if we want to fetch repos details\n    const fetchRate = () => {\n      fetch(\"https://api.github.com/rate_limit\")\n        .then((res) => {\n          if (!res.ok) {\n            throw new Error(\"Error connecting to Github API\");\n          }\n          return res.json();\n        })\n        .then((data) => {\n          remainingRate.current = data.rate.remaining;\n          setFetchStep(1);\n        });\n    };\n    fetchRate();\n  }, []);\n\n  useEffect(() => {\n    if (fetchStep === 1) {\n      const fetchData = () =>\n        fetch(`https://api.github.com/users/${username}`)\n          .then((res) => {\n            if (!res.ok) {\n              if (res.status === 404) {\n                history.push(\"/404\");\n              }\n              throw new Error(\"Error connecting to Github API\");\n            }\n            return res.json();\n          })\n          .then((data) => {\n            setData(data);\n            setLoading(false);\n            if (data.public_repos <= remainingRate.current * 100) {\n              // able to fetch repos\n              setCanFetchRepos(true);\n              console.log(\"can fetch\", username, remainingRate.current);\n            }\n          })\n          .catch((err) => {\n            setErr(err.message);\n          });\n      fetchData();\n    } // eslint-disable-next-line\n  }, [fetchStep]);\n\n  useEffect(() => {\n    const fetchRepos = () => {\n      console.log(\"trg\");\n      if (canFetchRepos) {\n        for (let i = 1; i <= Math.ceil(data.public_repos / 100); i++) {\n          fetch(\n            `https://api.github.com/users/${username}/repos?per_page=100&page=${i}`\n          )\n            .then((res) => {\n              if (!res.ok) {\n                throw new Error(\"Error connecting to Github API\");\n              }\n              return res.json();\n            })\n            .then((data) => {\n              console.log(data);\n              setRepos((prevState) => [...prevState, ...data]);\n            })\n            .catch((err) => {\n              console.error(err);\n            });\n        }\n      }\n    };\n    fetchRepos(); // eslint-disable-next-line\n  }, [canFetchRepos]);\n  return (\n    <div>\n      {loading ? (\n        <Loading err={err}></Loading>\n      ) : (\n        <div>\n          {err && <p>{err}</p>}\n          <UserInfo data={data} />\n          {canFetchRepos ? (\n            <Fragment>\n              <Graph repos={repos} />\n              <Repos repos={repos} />\n            </Fragment>\n          ) : (\n            <p className=\"error\">Not enough API rate to fetch repositories</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport moment from \"moment\";\nimport { VscGithubAlt } from \"react-icons/vsc\";\n\nimport \"../styles/search.css\";\n\nconst Search = () => {\n  const [username, setUsername] = useState(\"\");\n  const [err, setErr] = useState(\"\");\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Checking rate limit\n    fetch(\"https://api.github.com/rate_limit\")\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Error connecting to Github API\");\n        }\n        return res.json();\n      })\n      .then((data) => {\n        if (data.rate.remaining > 1) {\n          // We need at least one other request for the profile.\n          err && setErr(\"\"); // Clear errors if there's any\n          history.push(`/profile/${username}`); // redirect to profile page\n        } else {\n          // calculate how much time is left for API limit reset\n          const now = moment();\n          const reset_date = moment.unix(data.rate.reset);\n          let reset_in = [reset_date.diff(now, \"minutes\"), \"minute\"];\n          // change remaining time to seconds if it's 0 minute\n          if (reset_in[0] === 0) {\n            reset_in = [reset_date.diff(now, \"seconds\"), \"second\"];\n          }\n          // Plural for perfection\n          if (reset_in[0] > 1) {\n            reset_in[1] += \"s\";\n          }\n\n          setErr(\n            `API Rate limit reached, please wait for ${reset_in[0]} ${reset_in[1]}`\n          ); // Rate limit reached\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n        setErr(err.message);\n      });\n  };\n\n  return (\n    <div>\n      <div className=\"wrapper\">\n        <VscGithubAlt className=\"gitIcon\" />\n        <p className=\"searchP\">\n          Let's lookup {<span className=\"gradiantTxt\">{username}</span>}\n        </p>\n        <form onSubmit={(e) => handleSubmit(e)}>\n          <input\n            className=\"searchInput\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            autoFocus={true}\n          />\n        </form>\n        {err && <p className=\"error\">{err}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Switch, Route, HashRouter as Router } from \"react-router-dom\";\nimport NotFound from \"./pages/NotFound\";\nimport Profile from \"./pages/Profile\";\nimport Search from \"./pages/Search\";\n\nconst App = () => (\n  <Router>\n    <Switch>\n      <Route exact path=\"/\">\n        <Search />\n      </Route>\n      <Route path=\"/profile/:username\">\n        <Profile username />\n      </Route>\n      <Route path=\"*\">\n        <NotFound />\n      </Route>\n    </Switch>\n  </Router>\n);\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./styles/global.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}